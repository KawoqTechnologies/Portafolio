{"version":3,"sources":["vars/drawerItems.js","components/Home.js","vars/projectItems.js","components/sub/ProjectGridItems.js","components/Projects.js","components/sub/SocialLinks.js","vars/contactItems.js","components/Contact.js","components/Routes.js","components/sub/ListItemLink.js","components/sub/ListItemLinkShorthand.js","components/ScrollToTop.js","components/ClippedDrawer.js","App.js","serviceWorker.js","index.js","vars/homeItems.js","img/logo.png"],"names":["upperItems","myName","icon","to","lowerItems","URL","style","avatar","height","marginTop","detailsGrid","padding","divider","width","title","color","fontSize","subtitle","details","margin","withStyles","theme","root","flexGrow","props","Grid","container","direction","Paper","justify","alignItems","alt","src","logo","myDescription","myDetails","androidApps","link","desktopApps","webApps","icons","url","fill","d","getIcon","index","i","length","match","styles","paper","subHeader","marginBottom","tile","img","maxWidth","maxHeight","position","objectFit","mtb","name","list","margins","cols","key","component","map","actionIcon","target","href","startsWith","socialLinks","Routes","atEnter","opacity","atLeave","atActive","className","path","Home","exact","Works","Contact","newSyles","selectedButton","borderBottomRightRadius","borderTopRightRadius","backgroundColor","selectedIcon","selectedText","ListItemLink","renderLink","itemProps","textDecoration","this","primary","setRoute","route","button","onClick","disableTypography","Component","ScrollToTop","prevProps","location","pathname","window","scrollTo","children","withRouter","useStyles","makeStyles","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","zIndex","drawer","textColor","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","content","unit","contentShift","toolbarText","toolbarIcon","grow","routes","classes","useState","useTheme","React","open","setOpen","handleDrawerClose","initialEntries","initialIndex","CssBaseline","AppBar","clsx","Toolbar","aria-label","edge","variant","noWrap","myGithub","Drawer","anchor","Divider","lists","List","item","fontStyle","createMuiTheme","typography","useNextVariants","fontFamily","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","myImageLink"],"mappings":"mcAMWA,EAAa,CACpB,CACIC,OAAQ,OACRC,KAAM,kBAAC,IAAD,MACNC,GAAI,KAWR,CACIF,OAAQ,YACRC,KAAM,kBAAC,IAAD,MACNC,GAAI,aAER,CACIF,OAAQ,WACRC,KAAM,kBAAC,IAAD,MACNC,GAAI,aAICC,EAAa,CACtB,CACIH,OAAQ,OACRI,IAAK,KAET,CACIJ,OAAQ,WACRI,IAAK,KAET,CACIJ,OAAQ,UACRI,IAAK,KAET,CACIJ,OAAQ,YACRI,IAAK,KAET,CACIJ,OAAQ,UACRI,IAAK,M,2EClCPC,EAAQ,CACVC,OAAQ,CAACC,OAVA,IAUcC,UAAW,IAClCC,YAAa,CACTC,QAAS,IAEbC,QAAS,CACLC,MAAO,OACPL,OAAQ,GAEZM,MAAO,CACHC,MAAO,UACPC,SAAU,IAEdC,SAAU,CACNF,MAAO,UACPC,SAAU,IAEdE,QAAS,CACLH,MAAO,UACPC,SAAU,GACVG,OAAQ,KA6CDC,eAxEA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,SAAU,MAsEHH,EAzCF,SAACI,GAAD,OACT,kBAACC,EAAA,EAAD,CAAMC,WAAS,EACTC,UAAU,UACZ,kBAACC,EAAA,EAAD,KACI,kBAACH,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVE,QAAQ,SACRC,WAAW,UAEX,yBAAKC,IAAK9B,SAAQ+B,IAAKC,IACf3B,MAAOA,EAAMC,SAErB,kBAACkB,EAAA,EAAD,CAAMC,WAAS,EACTC,UAAU,SACVE,QAAQ,SACRC,WAAW,SACXxB,MAAOA,EAAMI,aAEf,kBAAC,IAAD,CAAYJ,MAAOA,EAAMQ,OACpBb,UAGL,kBAAC,IAAD,CAAYK,MAAOA,EAAMW,UACpBiB,kBAIT,kBAAC,IAAD,CAAS5B,MAAOA,EAAMM,WAI1B,kBAAC,IAAD,CAAYN,MAAOA,EAAMY,SACpBiB,kB,6HCzENC,GAAc,CACrB,CACItB,MAAO,gBACPmB,KAAM,+GACNhB,SAAU,uHACVoB,KAAM,sFAEV,CACIvB,MAAO,iBACPmB,KAAM,kCACNhB,SAAU,+HACVoB,KAAM,KAEV,CACIvB,MAAO,YACPmB,KAAM,kCACNhB,SAAU,4BACVoB,KAAM,KAEV,CACIvB,MAAO,eACPmB,KAAM,kCACNhB,SAAU,8CACVoB,KAAM,MAKHC,GAAc,GAGdC,GAAU,GAIVC,GAAQ,CACf,CACIC,IAAK,kBACLvC,KAAM,0BAAMwC,KAAK,OACLC,EAAE,2SAElB,CACIF,IAAK,SACLvC,KAAM,0BAAMwC,KAAK,OAAOC,EAAE,ivBAE9B,CACIF,IAAK,GACLvC,KAAM,0BAAMwC,KAAK,OAAOC,EAAE,mtBCpClC,SAASC,GAAQH,GAEb,IADA,IAAII,EAAQ,EACHC,EAAI,EAAGA,EAAIN,GAAMO,OAAQD,IAC9B,GAAIL,EAAIO,MAAMR,GAAMM,GAAGL,KAAM,CACzBI,EAAQC,EACR,MAGR,OAAON,GAAMK,GAAO3C,KAGxB,IAAM+C,GAAS,CACXC,MAAO,CACH/B,OAAQ,GAEZgC,UAAW,CACPpC,MAAO,UACPC,SAAU,IAEdd,KAAM,CACFa,MAAO,QAEXH,QAAS,CACLwC,aAAc,IAElBC,KAAM,CACF1C,QAAS,IAEb2C,IAAK,CACDC,SAAU,OACVC,UAAW,OACXC,SAAU,WACVC,UAAW,YAKbC,GAAM,CACR,CACIlD,UAAW,EACX2C,aAAc,GAElB,CACI3C,UAAW,GACX2C,aAAc,GAElB,CACI3C,UAAW,GACX2C,aAAc,KA0DPhC,eAAW6B,GAAX7B,EArDU,SAACI,GAAW,IAC1BoC,EAAuBpC,EAAvBoC,KAAMC,EAAiBrC,EAAjBqC,KAAMC,EAAWtC,EAAXsC,QACnB,OACI,kBAAC,IAAD,CACIxD,MAAOqD,GAAIG,IACX,kBAAC,IAAD,CAAUC,KAAM,EAAGzD,MAAO2C,GAAOI,MAC7B,kBAAC,IAAD,CAAcW,IAAI,YAAYD,KAAM,EAAGzD,MAAO,CAACE,OAAQ,SACnD,kBAAC,IAAD,CACIF,MAAO2C,GAAOE,UACdc,UAAU,OAAOL,GAErB,kBAAC,IAAD,CAAStD,MAAO2C,GAAOrC,WAKvBiD,EAAKK,KAAI,SAACb,EAAMR,GAAP,OACL,kBAAC,IAAD,CACImB,IAAKnB,EACLkB,KAAM,GAEN,yBACIzD,MAAO2C,GAAOK,IACdtB,IAAKqB,EAAKpB,KAAMF,IAAKsB,EAAKvC,QAE9B,kBAAC,IAAD,CACIA,MAAOuC,EAAKvC,MACZG,SAAUoC,EAAKpC,SACfkD,WACI,kBAAC,KAAD,CAAY7D,MAAO2C,GAAO/C,KACdkE,OAAO,SACPC,KAAMhB,EAAKhB,MACnB,kBAAC,KAAD,CAAS/B,MAAO2C,GAAO/C,MAClB0C,GAAQS,EAAKhB,mBC5E3CjB,gBAhBA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,SAAU,MAcHH,EAVE,SAACI,GAAD,OACb,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAgBmC,KAAK,kBAAkBC,KAAMzB,GAAa0B,QAAS,IACnE,kBAAC,GAAD,CAAgBF,KAAK,qBAAqBC,KAAMvB,GAAawB,QAAS,IACtE,kBAAC,GAAD,CAAgBF,KAAK,WAAWC,KAAMtB,GAASuB,QAAS,Q,UCM1Db,GAAS,CACXE,UAAW,CACPpC,MAAO,UACPC,SAAU,IAEdd,KAAM,CACFa,MAAO,QAEXH,QAAS,CACLwC,aAAc,IAElBC,KAAM,CACF1C,QAAS,IAEb2C,IAAK,CACDC,SAAU,OACVC,UAAW,OACXC,SAAU,WACVC,UAAW,YA+DJtC,eAAW6B,GAAX7B,EA3DK,SAACI,GAAW,IACrBoC,EAAyBpC,EAAzBoC,KAAMC,EAAmBrC,EAAnBqC,KAAMpD,EAAae,EAAbf,UAEnB,OACI,kBAAC,IAAD,CACIH,MAAO,CAACG,UAAWA,IACnB,kBAAC,IAAD,CAAUsD,KAAM,EAAGzD,MAAO2C,GAAOI,MAC7B,kBAAC,IAAD,CAAcW,IAAI,YAAYD,KAAM,EAAGzD,MAAO,CAACE,OAAQ,SACnD,kBAAC,IAAD,CACIF,MAAO2C,GAAOE,UACdc,UAAU,OAAOL,GAErB,kBAAC,IAAD,CAAStD,MAAO2C,GAAOrC,WAKvBiD,EAAKK,KAAI,SAACb,EAAMR,GAAP,OACL,kBAAC,IAAD,CACImB,IAAKnB,EACLkB,KAAM,GAEN,yBACIzD,MAAO2C,GAAOK,IACdtB,IAAKqB,EAAKpB,KAAMF,IAAKsB,EAAKvC,QAE9B,kBAAC,IAAD,CACIA,MAAOuC,EAAKvC,MACZG,SAAUoC,EAAKhB,KACf8B,WACI,kBAAC,KAAD,CAAY7D,MAAO2C,GAAO/C,KACdkE,OAAO,SACPC,KAAMhB,EAAKhB,MAGfgB,EAAKhB,KAAKiC,WAAW,SACjB,kBAAC,KAAD,CAAShE,MAAO2C,GAAO/C,MACnB,0BAAMwC,KAAK,OACLC,EAAE,ktBACC,iBClFlD4B,GAAc,CACrB,CACIzD,MAAO,QACPmB,KAAM,sDACNI,KAAM,KAEV,CACIvB,MAAO,WACPmB,KAAM,sDACNI,KAAM,yCAEV,CACIvB,MAAO,WACPmB,KAAM,sDACNI,KAAM,iCAEV,CACIvB,MAAO,cACPmB,KAAM,qEACNI,KAAM,iDCUCjB,gBAtBA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,SAAU,MAoBHH,EAhBC,SAACI,GAAD,OACZ,kBAACC,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAOtB,MAAO,CAACK,QAAS,KAAxB,uBAEI,kBAAC,KAAD,KDnBO,mBCwBX,kBAAC,GAAD,CAAaiD,KAAK,wBAAwBC,KAAMU,GAAa9D,UAAW,S,UCJjE+D,GAZA,SAAChD,GAAD,OACX,kBAAC,KAAD,CACIiD,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,SAAU,CAAEF,QAAS,GACrBG,UAAU,kBACV,kBAAC,IAAD,CAAOC,KAAK,IAAIb,UAAWc,EAAMC,OAAO,IACxC,kBAAC,IAAD,CAAOF,KAAK,YAAYb,UAAWgB,KACnC,kBAAC,IAAD,CAAOH,KAAK,WAAWb,UAAWiB,O,qICDpCC,GAAW,CACbC,eAAgB,CACZC,wBAAyB,GACzBC,qBAAsB,GACtBC,gBAAiB,WAErBC,aAAc,CACVzE,MAAO,QAEX0E,aAAc,CACV1E,MAAO,YAIT2E,G,2MACFC,WAAa,SAAAC,GAAS,OAAI,kBAAC,KAAD,eAAMtF,MAAO,CAACuF,eAAgB,QACxB1F,GAAI,EAAKqB,MAAMrB,IAAQyF,K,wEAE7C,IAAD,EAC2CE,KAAKtE,MAA9CtB,EADF,EACEA,KAAM6F,EADR,EACQA,QAASC,EADjB,EACiBA,SAAUnD,EAD3B,EAC2BA,MAAOoD,EADlC,EACkCA,MACvC,OACI,kBAAC,KAAD,CACI3F,MAAO2F,IAAUpD,EAAQsC,GAASC,eAAiB,KACnDc,QAAM,EACNC,QAAS,WACLH,EAASnD,IAEboB,UAAW6B,KAAKH,YAChB,kBAAC,KAAD,CACIrF,MAAO2F,IAAUpD,EAAQsC,GAASK,aAAe,MACnDtF,GACF,kBAAC,KAAD,CACIkG,mBAAiB,EACjB9F,MAAO2F,IAAUpD,EAAQsC,GAASM,aAAe,KACjDM,QAASA,S,GApBFM,aAgCZjF,gBApDA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,SAAU,MAkDHH,CAAmBsE,IClCnBtE,oBApBA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,SAAU,MAkBHH,EAdf,SAA+BI,GAAQ,IAC5BuE,EAAevE,EAAfuE,QAAS5F,EAAMqB,EAANrB,GAChB,OACI,kBAAC,KAAD,CAAUiE,OAAO,SAAS9D,MAAO,CAACuF,eAAgB,QAAS5B,UAAU,IAAII,KAAMlE,EAAI+F,QAAM,GACrF,kBAAC,KAAD,CAAcH,QAASA,QCd7BO,G,2LACiBC,GACXT,KAAKtE,MAAMgF,SAASC,WAAaF,EAAUC,SAASC,UACpDC,OAAOC,SAAS,EAAG,K,+BAKvB,OAAOb,KAAKtE,MAAMoF,a,GARAP,aAYXQ,eAAWP,ICYpBQ,GAAYC,aAAW,SAAA1F,GAAK,MAAK,CACrCC,KAAM,CACJ0F,QAAS,QAEXC,OAAQ,CACNC,WAAY7F,EAAM8F,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQhG,EAAM8F,YAAYE,OAAOC,MACjCC,SAAUlG,EAAM8F,YAAYI,SAASC,gBAEvCC,OAAQpG,EAAMoG,OAAOC,OAAS,EAC9BnC,gBAAiB,UACjBoC,UAAW,QAEbC,YAAa,CACX/G,MAAM,eAAD,OAhBW,IAgBX,OACLgH,WAjBgB,IAkBhBX,WAAY7F,EAAM8F,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQhG,EAAM8F,YAAYE,OAAOS,QACjCP,SAAUlG,EAAM8F,YAAYI,SAASQ,kBAGzCC,WAAY,CACVC,YAAa5G,EAAM6G,QAAQ,IAE7BC,KAAM,CACJnB,QAAS,QAEXU,OAAQ,CACN7G,MA9BgB,IA+BhBuH,WAAY,GAEdC,YAAa,CACXxH,MAlCgB,KAoClByH,aAAa,aACXtB,QAAS,OACTlF,WAAY,SACZnB,QAASU,EAAM6G,QAAQ,EAAG,IACvB7G,EAAMkH,OAAOC,QAJN,CAKVC,eAAgB,aAElBC,QAAS,CACPjI,UAAW,GACXc,SAAU,EACVZ,QAA8B,EAArBU,EAAM6G,QAAQS,KACvBzB,WAAY7F,EAAM8F,YAAYC,OAAO,SAAU,CAC7CC,OAAQhG,EAAM8F,YAAYE,OAAOC,MACjCC,SAAUlG,EAAM8F,YAAYI,SAASC,gBAEvCK,YAnDgB,KAqDlBe,aAAc,CACZ1B,WAAY7F,EAAM8F,YAAYC,OAAO,SAAU,CAC7CC,OAAQhG,EAAM8F,YAAYE,OAAOS,QACjCP,SAAUlG,EAAM8F,YAAYI,SAASQ,iBAEvCF,WAAY,GAEdgB,YAAa,CACXtH,SAAU,EACVR,MAAO,QAEP+H,YAAa,CACTb,YAAa,IAEjBc,KAAM,CACFxH,SAAU,OAIZyH,GAAS,CACX,IACA,UACA,YACA,YAqHW5H,mBAAW0F,GAAX1F,EAlHf,SAAuBI,GACnB,IAAMyH,EAAUnC,KADU,EAGAoC,mBAAS,GAHT,mBAGnBjD,EAHmB,KAGZD,EAHY,KAIpB3E,EAAQ8H,cAJY,EAMFC,IAAMF,UAAS,GANb,mBAMnBG,EANmB,KAMbC,EANa,KAYpBC,EAAoB,WACxBD,GAAQ,IAGV,OACI,kBAAC,IAAD,CACIE,eAAgBR,GAChBS,aAAc,GACd,kBAAC,GAAD,KACI,yBAAK5E,UAAWoE,EAAQ3H,MACpB,kBAACoI,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQlG,SAAS,QACjBoB,UAAW+E,kBAAKX,EAAQhC,OAAT,eACdgC,EAAQrB,YAAcyB,KAGnB,kBAACQ,EAAA,EAAD,KACA,kBAAC,KAAD,CACIvJ,MAAO,CAACS,MAAO,QACf+I,aAAW,cACX3D,QAxBC,WACvBmD,GAAQ,IAwBcS,KAAK,QACLlF,UAAW+E,kBAAKX,EAAQjB,WAAYqB,GAAQJ,EAAQd,OACpD,kBAAC,KAAD,OAEA,kBAAC,IAAD,CAAY7H,MAAO,CAACS,MAAO,QAASiJ,QAAQ,KAAKC,QAAM,EAACpF,UAAWoE,EAAQF,MACtE9I,UAGL,kBAAC,KAAD,CACIK,MAAO,CAACS,MAAO,QACfsD,KAAM6F,YAEN,kBAAC,KAAD,KACI,0BACIvH,EAAE,iZAMtB,kBAACwH,EAAA,EAAD,CACItF,UAAWoE,EAAQvB,OACnBsC,QAAQ,aACRI,OAAO,OACPf,KAAMA,EACNJ,QAAS,CACL/F,MAAO+F,EAAQZ,cAEnB,yBAAKxD,UAAWoE,EAAQX,cACxB,kBAAC,KAAD,CAAYnC,QAASoD,GACI,QAApBlI,EAAMM,UAAsB,kBAAC,KAAD,MAAsB,kBAAC,KAAD,QAGvD,kBAAC0I,EAAA,EAAD,MACA,yBAAKxF,UAAWoE,EAAQT,UAExB,yBAAK3D,UAAWoE,EAAQqB,OACpB,kBAACC,EAAA,EAAD,CAAMpE,QAASoD,GAEPvJ,EAAWkE,KAAI,SAACsG,EAAM3H,GAAP,OACX,kBAAC,GAAD,CAAcoD,MAAOA,EAAOpD,MAAOA,EAAOmD,SAAUA,EAAUhC,IAAKnB,EAAO1C,GAAIqK,EAAKrK,GAAI4F,QAASyE,EAAKvK,OAAQC,KAAMsK,EAAKtK,WAIpI,kBAACmK,EAAA,EAAD,CAAS/J,MAAO,CAACG,UAAW,MAE5B,kBAAC,IAAD,CAAYH,MAAO,CAACS,MAAO,UAAWI,OAAQ,GAAIH,SAAU,GAAIyJ,UAAW,WAA3E,kBAIA,kBAACJ,EAAA,EAAD,MAEA,kBAACE,EAAA,EAAD,CAAMpE,QAASoD,GAEPnJ,EAAW8D,KAAI,SAACsG,EAAM3H,GAAP,OACX,kBAAC,GAAD,CAAuBmB,IAAKnB,EAAOkD,QAASyE,EAAKvK,OAAQE,GAAIqK,EAAKnK,YAOtF,0BAAMQ,MAAM,OACRgE,UAAW+E,kBAAKX,EAAQP,QAAT,eACdO,EAAQL,aAAeS,KAGxB,yBAAKxE,UAAWoE,EAAQT,UACxB,kBAAC,GAAD,a,oBCxMlBnH,GAAQqJ,aAAe,CACzBC,WAAY,CACRC,iBAAiB,EACjBC,WAAY,UAeLC,G,iLARP,OACI,kBAAC,KAAD,CAAkBzJ,MAAOA,IACrB,kBAAC,GAAD,W,GAJEgF,aCDE0E,QACW,cAA7BrE,OAAOF,SAASwE,UAEe,UAA7BtE,OAAOF,SAASwE,UAEhBtE,OAAOF,SAASwE,SAAShI,MACvB,2DCZNiI,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,iBE/HnBC,EAAOC,QAAU,CACb3L,OAPS,qBAODiC,cANQ,YAMOC,UALX,WAKsB0J,YAJpB,sBAIiC3B,SAHpC,uBAMfiB,SAASrK,MAAQb,mC,mBCVjB0L,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.c882d3ed.chunk.js","sourcesContent":["import React from \"react\";\nimport HomeIcon from '@material-ui/icons/Home';\n//import SettingsIcon from '@material-ui/icons/Settings';\nimport WorkIcon from '@material-ui/icons/Work';\nimport ContactsIcon from '@material-ui/icons/Contacts';\n\nexport var upperItems = [\n    {\n        myName: 'Home',\n        icon: <HomeIcon/>,\n        to: '/'\n    },\n    // {\n    //     myName: 'About',\n    //     icon: <InfoIcon/>\n    // },\n    //{\n    //    myName: 'Skills',\n    //    icon: <SettingsIcon/>,\n    //    to: '/skills'\n    //},\n    {\n        myName: 'Proyectos',\n        icon: <WorkIcon/>,\n        to: '/projects'\n    },\n    {\n        myName: 'Contacto',\n        icon: <ContactsIcon/>,\n        to: '/contact'\n    },\n]\n\nexport const lowerItems = [\n    {\n        myName: 'Blog',\n        URL: '#'\n    },\n    {\n        myName: 'Facebook',\n        URL: '#'\n    },\n    {\n        myName: 'Twitter',\n        URL: '#'\n    },\n    {\n        myName: 'Instagram',\n        URL: '#'\n    },\n    {\n        myName: 'YouTube',\n        URL: '#'\n    },\n\n]","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport {withStyles} from '@material-ui/core/styles';\nimport Paper from \"@material-ui/core/es/Paper/Paper\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Divider from \"@material-ui/core/es/Divider/Divider\";\nimport {myDetails, myName, myDescription} from './../vars/homeItems'\nimport logo from \"./../img/logo.png\";\n\nconst size = 200;\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n\n});\n\nconst style = {\n    avatar: {height: size, marginTop: 32},\n    detailsGrid: {\n        padding: 24\n    },\n    divider: {\n        width: '100%',\n        height: 2\n    },\n    title: {\n        color: '#212121',\n        fontSize: 24\n    },\n    subtitle: {\n        color: '#757575',\n        fontSize: 18\n    },\n    details: {\n        color: '#212121',\n        fontSize: 18,\n        margin: 24\n    }\n};\n\nconst Home = (props) => (\n    <Grid container\n          direction=\"column\">\n        <Paper >\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\">\n\n                <img alt={myName} src={logo}\n                        style={style.avatar}/>\n\n                <Grid container\n                      direction=\"column\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      style={style.detailsGrid}\n                >\n                    <Typography style={style.title}>\n                        {myName}\n                    </Typography>\n\n                    <Typography style={style.subtitle}>\n                        {myDescription}\n                    </Typography>\n                </Grid>\n\n                <Divider style={style.divider}/>\n\n            </Grid>\n\n            <Typography style={style.details}>\n                {myDetails}\n            </Typography>\n        </Paper>\n    </Grid>\n);\n\nHome.propTypes = {};\n\nexport default withStyles(styles)(Home);","import React from \"react\";\n\nexport var androidApps = [\n    {\n        title: 'Cliente Notas',\n        logo: 'https://lh3.googleusercontent.com/_4hOQUDYWL5w-AUNKZ3i-ln-XGY3mhdPODgu-rQnUQrjQxEjXBeUaKXFHVCTO9kLIQ=s180-rw',\n        subtitle: 'Aplicación para ver información de usuario, como característica principal es posible ver notas del usuario.',\n        link: 'https://play.google.com/store/apps/details?id=com.undefined_constant.notas_cliente'\n    },\n    {\n        title: 'Eliminator App',\n        logo: 'https://i.imgur.com/0THlLSi.png',\n        subtitle: 'Eliminator, la aplicación que te ayudará a borrar toda la información de tu celular con un simple mensaje de texto.',\n        link: '#'\n    },\n    {\n        title: 'Panaderia',\n        logo: 'https://i.imgur.com/fLhnYmY.png',\n        subtitle: 'Panaderia Sagrado Corazon',\n        link: '#'\n    },\n    {\n        title: 'AR Pediatria',\n        logo: 'https://i.imgur.com/3fbg9Tq.png',\n        subtitle: 'Aplicacion AR enfocada al area de pediatria',\n        link: '#'\n    },\n\n]\n\nexport var desktopApps = [\n]\n\nexport var webApps = [\n\n]\n\nexport var icons = [\n    {\n        url: 'play.google.com',\n        icon: <path fill=\"#FFF\"\n                    d=\"M3,20.5V3.5C3,2.91 3.34,2.39 3.84,2.15L13.69,12L3.84,21.85C3.34,21.6 3,21.09 3,20.5M16.81,15.12L6.05,21.34L14.54,12.85L16.81,15.12M20.16,10.81C20.5,11.08 20.75,11.5 20.75,12C20.75,12.5 20.53,12.9 20.18,13.18L17.89,14.5L15.39,12L17.89,9.5L20.16,10.81M6.05,2.66L16.81,8.88L14.54,11.15L6.05,2.66Z\"/>\n    },\n    {\n        url: 'github',\n        icon: <path fill=\"#FFF\" d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\" />\n    },\n    {\n        url: '',\n        icon: <path fill=\"#FFF\" d=\"M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z\" />\n    }\n\n]","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport GridList from \"@material-ui/core/GridList/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile/GridListTile\";\nimport ListSubheader from \"@material-ui/core/ListSubheader/ListSubheader\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport SvgIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport {icons} from '../../vars/projectItems'\nimport Divider from \"@material-ui/core/es/Divider/Divider\";\n\nfunction getIcon(url) {\n    var index = 0;\n    for (var i = 0; i < icons.length; i++) {\n        if (url.match(icons[i].url)) {\n            index = i;\n            break;\n        }\n    }\n    return icons[index].icon;\n}\n\nconst styles = {\n    paper: {\n        margin: 0\n    },\n    subHeader: {\n        color: '#212121',\n        fontSize: 18\n    },\n    icon: {\n        color: '#FFF'\n    },\n    divider: {\n        marginBottom: 32\n    },\n    tile: {\n        padding: 16\n    },\n    img: {\n        maxWidth: '100%',\n        maxHeight: '100%',\n        position: 'relative',\n        objectFit: 'contain'\n    },\n    \n};\n\nconst mtb = [\n    {\n        marginTop: 0,\n        marginBottom: 0,\n    },\n    {\n        marginTop: 16,\n        marginBottom: 0,\n    },\n    {\n        marginTop: 16,\n        marginBottom: 16,\n    },\n\n]\n\nconst ProjectGridItems = (props) => {\n    const {name, list, margins} = props;\n    return (\n        <Paper\n            style={mtb[margins]}>\n            <GridList cols={2} style={styles.tile}>\n                <GridListTile key=\"Subheader\" cols={2} style={{height: 'auto'}}>\n                    <ListSubheader\n                        style={styles.subHeader}\n                        component=\"div\">{name}</ListSubheader>\n\n                    <Divider style={styles.divider}/>\n\n                </GridListTile>\n\n                {\n                    list.map((tile, index) => (\n                        <GridListTile\n                            key={index}\n                            cols={1}>\n\n                            <img\n                                style={styles.img}\n                                src={tile.logo} alt={tile.title}/>\n\n                            <GridListTileBar\n                                title={tile.title}\n                                subtitle={tile.subtitle}\n                                actionIcon={\n                                    <IconButton style={styles.icon}\n                                                target=\"_blank\"\n                                                href={tile.link}>\n                                        <SvgIcon style={styles.icon}>\n                                            {getIcon(tile.link)}\n                                        </SvgIcon>\n                                    </IconButton>\n                                }/>\n\n                        </GridListTile>\n                    ))\n                }\n\n            </GridList>\n        </Paper>\n    )\n};\n\nProjectGridItems.propTypes = {\n    name: PropTypes.string.isRequired,\n    list: PropTypes.array.isRequired,\n    marginTop: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(ProjectGridItems);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport {withStyles} from '@material-ui/core/styles';\nimport WorksGridItems from \"./sub/ProjectGridItems\";\nimport {androidApps, desktopApps, webApps} from '../vars/projectItems'\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nconst Projects = (props) => (\n    <Grid>\n        <WorksGridItems name='Apps de Android' list={androidApps} margins={0}/>\n        <WorksGridItems name='Apps de Escritorio' list={desktopApps} margins={1}/>\n        <WorksGridItems name='Apps Web' list={webApps} margins={1}/>\n    </Grid>\n);\n\nProjects.propTypes = {};\n\nexport default withStyles(styles)(Projects);","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport GridList from \"@material-ui/core/GridList/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile/GridListTile\";\nimport ListSubheader from \"@material-ui/core/ListSubheader/ListSubheader\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar/GridListTileBar\";\nimport Divider from \"@material-ui/core/es/Divider/Divider\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport SvgIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\n\n// function getIcon(url) {\n//     var index = 2;\n//     for (var i = 0; i < icons.length; i++) {\n//         if (url.startsWith(icons[i].url)) {\n//             index = i;\n//             break;\n//         }\n//     }\n//     return icons[index].icon;\n// }\n\nconst styles = {\n    subHeader: {\n        color: '#212121',\n        fontSize: 18\n    },\n    icon: {\n        color: '#FFF'\n    },\n    divider: {\n        marginBottom: 32\n    },\n    tile: {\n        padding: 16\n    },\n    img: {\n        maxWidth: '100%',\n        maxHeight: '100%',\n        position: 'relative',\n        objectFit: 'contain'\n    },\n};\n\nconst SocialLinks = (props) => {\n    const {name, list, marginTop} = props;\n\n    return (\n        <Paper\n            style={{marginTop: marginTop}}>\n            <GridList cols={2} style={styles.tile}>\n                <GridListTile key=\"Subheader\" cols={2} style={{height: 'auto'}}>\n                    <ListSubheader\n                        style={styles.subHeader}\n                        component=\"div\">{name}</ListSubheader>\n\n                    <Divider style={styles.divider}/>\n\n                </GridListTile>\n\n                {\n                    list.map((tile, index) => (\n                        <GridListTile\n                            key={index}\n                            cols={1}>\n\n                            <img\n                                style={styles.img}\n                                src={tile.logo} alt={tile.title}/>\n\n                            <GridListTileBar\n                                title={tile.title}\n                                subtitle={tile.link}\n                                actionIcon={\n                                    <IconButton style={styles.icon}\n                                                target=\"_blank\"\n                                                href={tile.link}>\n\n                                        {\n                                            tile.link.startsWith('https') ?\n                                                <SvgIcon style={styles.icon}>\n                                                    <path fill=\"#FFF\"\n                                                          d=\"M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z\"/>\n                                                </SvgIcon> : null\n                                        }\n                                    </IconButton>\n                                }/>\n\n                        </GridListTile>\n                    ))\n                }\n\n            </GridList>\n        </Paper>\n    )\n};\n\nSocialLinks.propTypes = {\n    name: PropTypes.string.isRequired,\n    list: PropTypes.array.isRequired,\n    marginTop: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(SocialLinks);","export var email = 'mail@gmail.com'\n\nexport var socialLinks = [\n    {\n        title: 'Skype',\n        logo: 'https://image.flaticon.com/icons/svg/174/174869.svg',\n        link: '#'\n    },\n    {\n        title: 'WhatsApp',\n        logo: 'https://image.flaticon.com/icons/svg/174/174879.svg',\n        link: 'https://api.whatsapp.com/send?phone=0'\n    },\n    {\n        title: 'LinkedIn',\n        logo: 'https://image.flaticon.com/icons/svg/174/174857.svg',\n        link: 'https://www.linkedin.com/in//'\n    },\n    {\n        title: 'Google Play',\n        logo: 'https://www.vectorlogo.zone/logos/google_play/google_play-icon.svg',\n        link: 'https://play.google.com/store/apps/developer'\n    },\n\n\n]","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport {withStyles} from '@material-ui/core/styles';\nimport Paper from \"@material-ui/core/es/Paper/Paper\";\nimport Typography from \"@material-ui/core/es/Typography/Typography\";\nimport SocialLinks from \"./sub/SocialLinks\";\nimport {email, socialLinks} from '../vars/contactItems'\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nconst Contact = (props) => (\n    <Grid>\n        <Paper style={{padding: 16}}>\n            Contact me via Email\n            <Typography>\n                {email}\n            </Typography>\n        </Paper>\n\n        <SocialLinks name='My Other Social Links' list={socialLinks} marginTop={16}/>\n\n    </Grid>\n);\n\nContact.propTypes = {};\n\nexport default withStyles(styles)(Contact);","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport Home from \"./Home\";\nimport Works from \"./Projects\";\nimport Contact from \"./Contact\";\nimport {AnimatedSwitch} from 'react-router-transition';\n\n\nconst Routes = (props) => (\n    <AnimatedSwitch\n        atEnter={{ opacity: 0 }}\n        atLeave={{ opacity: 0 }}\n        atActive={{ opacity: 1 }}\n        className=\"switch-wrapper\">\n        <Route path='/' component={Home} exact={true}/>\n        <Route path='/projects' component={Works}/>\n        <Route path='/contact' component={Contact}/>\n    </AnimatedSwitch>\n);\n\nexport default Routes;\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nconst newSyles = {\n    selectedButton: {\n        borderBottomRightRadius: 10,\n        borderTopRightRadius: 10,\n        backgroundColor: '#4CAF50',\n    },\n    selectedIcon: {\n        color: '#FFF'\n    },\n    selectedText: {\n        color: '#FFFFFF',\n    },\n}\n\nclass ListItemLink extends Component {\n    renderLink = itemProps => <Link style={{textDecoration: 'none'}}\n                                    to={this.props.to} {...itemProps} />;\n\n    render() {\n        const {icon, primary, setRoute, index, route} = this.props;\n        return (\n            <ListItem\n                style={route === index ? newSyles.selectedButton : null}\n                button\n                onClick={() => {\n                    setRoute(index)\n                }}\n                component={this.renderLink}>\n                <ListItemIcon\n                    style={route === index ? newSyles.selectedIcon : null}\n                >{icon}</ListItemIcon>\n                <ListItemText\n                    disableTypography\n                    style={route === index ? newSyles.selectedText : null}\n                    primary={primary}/>\n            </ListItem>\n        );\n    }\n}\n\nListItemLink.propTypes = {\n    icon: PropTypes.element.isRequired,\n    primary: PropTypes.node.isRequired,\n    to: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(ListItemLink);","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nfunction ListItemLinkShorthand(props) {\n    const {primary, to} = props;\n    return (\n        <ListItem target=\"_blank\" style={{textDecoration: 'none'}} component='a' href={to} button>\n            <ListItemText primary={primary}/>\n        </ListItem>\n    );\n}\n\nListItemLinkShorthand.propTypes = {\n    primary: PropTypes.node.isRequired,\n    to: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(ListItemLinkShorthand);","import {Component} from 'react';\nimport {withRouter} from \"react-router-dom\";\n\nclass ScrollToTop extends Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            window.scrollTo(0, 0);\n        }\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n\nexport default withRouter(ScrollToTop);\n","import React, {useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport {lowerItems, upperItems} from './../vars/drawerItems'\nimport {MemoryRouter} from 'react-router-dom'\nimport Routes from \"./Routes\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport SvgIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport ListItemLink from \"./sub/ListItemLink\";\nimport ListItemLinkShorthand from \"./sub/ListItemLinkShorthand\";\nimport ScrollToTop from \"./ScrollToTop\";\nimport {myName, myGithub} from '../vars/homeItems'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: '#4CAF50',\n    textColor: \"#FFF\"\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    marginTop: 65,\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  toolbarText: {\n    flexGrow: 1,\n    color: \"#FFF\"\n  },\n    toolbarIcon: {\n        marginRight: 16\n  },\n    grow: {\n        flexGrow: 1\n  },\n}));\n\nconst routes = [\n    '/',\n    '/skills',\n    '/projects',\n    '/contact',\n]\n\nfunction ClippedDrawer(props) {\n    const classes = useStyles();\n    //const {classes} = props;\n    const [route, setRoute] = useState(0)\n    const theme = useTheme();\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleDrawerClose = () => {\n      setOpen(false);\n    };\n\n    return (\n        <MemoryRouter\n            initialEntries={routes}\n            initialIndex={0}>\n            <ScrollToTop>\n                <div className={classes.root}>\n                    <CssBaseline/>\n                    <AppBar position=\"fixed\"\n                    className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                    })}\n                    >\n                        <Toolbar>\n                        <IconButton\n                            style={{color: '#FFF'}}\n                            aria-label=\"open drawer\"\n                            onClick={handleDrawerOpen}\n                            edge=\"start\"\n                            className={clsx(classes.menuButton, open && classes.hide)}>\n                            <MenuIcon />\n                        </IconButton>                            \n                            <Typography style={{color: '#FFF'}} variant=\"h6\" noWrap className={classes.grow}>\n                                {myName}\n                            </Typography>\n\n                            <IconButton\n                                style={{color: '#FFF'}}\n                                href={myGithub}\n                                >\n                                <SvgIcon>\n                                    <path\n                                        d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"/>\n                                </SvgIcon>\n                            </IconButton>\n\n                        </Toolbar>\n                    </AppBar>\n                    <Drawer\n                        className={classes.drawer}\n                        variant=\"persistent\"\n                        anchor=\"left\"\n                        open={open}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}>\n                        <div className={classes.drawerHeader}>\n                        <IconButton onClick={handleDrawerClose}>\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                        </IconButton>\n                        </div>\n                        <Divider />\n                        <div className={classes.toolbar}/>\n\n                        <div className={classes.lists}>\n                            <List onClick={handleDrawerClose} >\n                                {\n                                    upperItems.map((item, index) => (\n                                        <ListItemLink route={route} index={index} setRoute={setRoute} key={index} to={item.to} primary={item.myName} icon={item.icon}/>\n                                    ))\n                                }\n                            </List>\n                            <Divider style={{marginTop: 16}}/>\n\n                            <Typography style={{color: '#212121', margin: 16, fontSize: 18, fontStyle: 'italic'}}>\n                                Redes Sociales\n                            </Typography>\n\n                            <Divider/>\n\n                            <List onClick={handleDrawerClose}>\n                                {\n                                    lowerItems.map((item, index) => (\n                                        <ListItemLinkShorthand key={index} primary={item.myName} to={item.URL}/>\n                                    ))\n                                }\n                            </List>\n                        </div>\n\n                    </Drawer>\n                    <main width=\"100%\"\n                        className={clsx(classes.content, {\n                        [classes.contentShift]: open,\n                        })}\n                    >\n                        <div className={classes.toolbar}/>\n                        <Routes/>\n\n                    </main>\n                </div>\n            </ScrollToTop>\n        </MemoryRouter>\n    );\n}\n\nClippedDrawer.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(useStyles)(ClippedDrawer);","import React, {Component} from 'react';\nimport './App.css';\nimport ClippedDrawer from \"./components/ClippedDrawer\";\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core';\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n        fontFamily: 'Muli',\n    },\n});\n\n\nclass App extends Component {\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <ClippedDrawer/>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var myName = 'Kawoq Technologies'\nvar myDescription = 'Subtitulo'\nvar myDetails = 'Detalles'\nvar myImageLink = \"https://i.imgur.com\"\nvar myGithub = 'https://github.com/'\n\nmodule.exports = {\n    myName, myDescription, myDetails, myImageLink, myGithub\n}\n\ndocument.title = myName + \" - Portafolio\";\n","module.exports = __webpack_public_path__ + \"static/media/logo.eae0a375.png\";"],"sourceRoot":""}